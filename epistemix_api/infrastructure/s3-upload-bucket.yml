AWSTemplateFormatVersion: '2010-09-09'
Description: 'S3 bucket for file uploads with CORS configuration'

Parameters:
  BucketName:
    Type: String
    Description: Name of the S3 bucket to create
    MinLength: 3
    MaxLength: 63
    AllowedPattern: '^[a-z0-9][a-z0-9\-]*[a-z0-9]$'
    ConstraintDescription: Bucket name must be between 3 and 63 characters, start and end with lowercase letter or number, and contain only lowercase letters, numbers, and hyphens

  Environment:
    Type: String
    Description: Environment name for tagging
    Default: dev
    AllowedValues:
      - dev
      - staging
      - production

  AllowedOrigins:
    Type: CommaDelimitedList
    Description: List of origins allowed for CORS requests
    Default: "http://localhost:3000,https://localhost:3000"

Resources:
  UploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - PUT
              - POST
            AllowedOrigins: !Ref AllowedOrigins
            ExposedHeaders:
              - ETag
            MaxAge: 3000
      LifecycleConfiguration:
        Rules:
          - Id: AbortIncompleteMultipartUploads
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 1
          - Id: TransitionToGlacier
            Status: Enabled
            Transitions:
              - StorageClass: GLACIER
                TransitionInDays: 1
            NoncurrentVersionTransitions:
              - StorageClass: GLACIER
                TransitionInDays: 1
          - Id: DeleteFromGlacier
            Status: Enabled
            ExpirationInDays: 2
            NoncurrentVersionExpirationInDays: 2
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: FileUploads
        - Key: ManagedBy
          Value: CloudFormation

  UploadLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/s3/${BucketName}/access-logs'
      RetentionInDays: 30
      Tags:
        - Key: Environment
          Value: !Ref Environment

  # IAM role for applications to use for S3 access
  S3UploadRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${BucketName}-upload-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3UploadPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:DeleteObject
                  - s3:RestoreObject
                Resource: !Sub 'arn:aws:s3:::${UploadBucket}/*'
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetLifecycleConfiguration
                  - s3:PutLifecycleConfiguration
                Resource: !Sub 'arn:aws:s3:::${UploadBucket}'
      Tags:
        - Key: Environment
          Value: !Ref Environment

Outputs:
  BucketName:
    Description: Name of the created S3 bucket
    Value: !Ref UploadBucket
    Export:
      Name: !Sub '${AWS::StackName}-BucketName'

  BucketArn:
    Description: ARN of the created S3 bucket
    Value: !GetAtt UploadBucket.Arn
    Export:
      Name: !Sub '${AWS::StackName}-BucketArn'

  BucketDomainName:
    Description: Domain name of the S3 bucket
    Value: !GetAtt UploadBucket.DomainName
    Export:
      Name: !Sub '${AWS::StackName}-BucketDomainName'

  UploadRoleArn:
    Description: ARN of the IAM role for S3 uploads
    Value: !GetAtt S3UploadRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-UploadRoleArn'
