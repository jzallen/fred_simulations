tasks:
    setup_fred_environment:
        name: Setup FRED Environment
        description: Install dependencies and build FRED framework
        command: |
            set -e
            # Update package lists and install system dependencies
            sudo apt-get update && sudo apt-get install -y build-essential g++ make cmake pkg-config libboost-all-dev

            # Install Node.js and npm separately with verification
            sudo apt-get install -y nodejs npm
            hash -r  # Refresh command cache

            # Verify npm is available
            which npm || { echo "npm not found after installation"; exit 1; }
            npm --version

            # Build FRED framework
            cd /workspaces/fred_simulations/fred-framework/src && make
            cd /workspaces/fred_simulations

            # Install Poetry
            curl -sSL https://install.python-poetry.org | python3 -
            echo 'export PATH="$HOME/.local/bin:$PATH"' >> ~/.bashrc
            export PATH="$HOME/.local/bin:$PATH"
            poetry install --no-root

            # Install Claude CLI
            npm install @anthropic-ai/claude-code
            echo 'alias claude="npx @anthropic-ai/claude-code"' >> ~/.bashrc
        triggeredBy: ['postEnvironmentStart', 'manual']

    setup_epx_config:
        name: Setup EPX Configuration
        description: generates ~/.epx/config.json with API configuration
        command: |
            mkdir -p ~/.epx
            cat > ~/.epx/config.json << 'EOF'
            {
             "api-url": "http://localhost:5000",
             "bearer-token": "eyJ1c2VyX2lkIjogMTIzLCAic2NvcGVzX2hhc2giOiAiYWJjMTIzIn0="
            }
            EOF
            echo "Generated ~/.epx/config.json"
        triggeredBy: ['postEnvironmentStart', 'manual']

    install_github_cli:
        name: Install GitHub CLI
        description: Install GitHub CLI (gh) for managing GitHub operations
        command: |
            set -e
            # Install GitHub CLI
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt update
            sudo apt install gh -y
            echo "GitHub CLI installed successfully"
            gh --version
        triggeredBy: ['postEnvironmentStart', 'manual']

    install_docker:
        name: Install Docker
        description: Install Docker for building and running containers
        command: |
            set -e
            # Install Docker dependencies
            sudo apt-get update
            sudo apt-get install -y \
                ca-certificates \
                curl \
                gnupg \
                lsb-release
            
            # Add Docker's official GPG key for Debian
            sudo mkdir -p /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/debian/gpg | sudo tee /etc/apt/keyrings/docker.asc > /dev/null
            
            # Set up the Docker repository for Debian
            echo \
                "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
                $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            
            # Install Docker Engine
            sudo apt-get update
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
            
            # Add current user to docker group to run without sudo
            sudo usermod -aG docker $USER
            
            # Start Docker service
            sudo service docker start
            
            echo "Docker installed successfully"
            echo "Note: You may need to log out and back in for group changes to take effect"
            docker --version
            docker compose version
        triggeredBy: ['manual']
